{"version":3,"sources":["history.js","components/Posts/Post/styles.js","components/Posts/Post/Post.js","api/index.js","actions/Posts.js","components/Posts/Posts.js","components/AddComment/AddComment.js","components/Comment/Comment.js","components/CommentList/CommentList.js","components/AddReply/AddReplyToComment.js","components/Thread/Thread.js","Routes.js","logo.png","App.js","reducers/Posts.js","reducers/Comments.js","reducers/Thread.js","reducers/User.js","reducers/index.js","index.js"],"names":["history","basename","makeStyles","media","height","paddingTop","backgroundColor","backgroundBlendMode","margin","border","fullHeightCard","card","display","flexDirection","justifyContent","borderRadius","position","mx","width","padding","overlay","top","left","color","overlay2","right","grid","details","title","cardActions","Post","post","classes","useStyles","postid","post_id","console","log","Card","className","CardHeader","avatar","Avatar","aria-label","src","user_image","name","IconButton","upvotes","downvotes","Typography","variant","component","image_link","CardMedia","image","Title","caption","timePosted","CardActions","Button","size","onClick","localStorage","setItem","window","location","assign","noofcomments","API","axios","create","baseURL","interceptors","request","use","req","headers","Authorization","Cookies","get","upvoteComment","comment_id","put","createComment","Comment","getThread","getPostComments","dispatch","a","data","type","payload","comment","api","replyComment","up_level_cid","Posts","useDispatch","posts","useSelector","state","length","Grid","item","xs","container","spacing","map","key","x3","sm","CircularProgress","AddComment","props","username","User","Name","useState","setComment","handleAddComment","e","preventDefault","commentAs","TextField","id","label","multiline","rows","fullWidth","onChange","event","value","target","useEffect","Paper","style","marginTop","wrap","alt","zeroMinWidth","textAlign","timeCommented","upVotes","downVotes","CommentList","match","params","comments","Comments","i","push","sort","b","AddReplyToComments","Thread","commentid","getItem","threaddd","find","AddReplyToComment","thread_items","keys","Routes","path","exact","App","logo","reducer","action","reducers","combineReducers","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d3f3edb.chunk.js","sourcesContent":["import { createBrowserHistory as history} from 'history';\n\nexport default history({\n    basename: '/post'\n});","import { makeStyles } from '@material-ui/core/styles';\n\nexport default makeStyles({\n  media: {\n    height: 0,\n    paddingTop: '56.25%',\n    backgroundColor: 'rgba(0, 0, 0, 0.5)',\n    backgroundBlendMode: 'darken',\n    margin:\"10px\"\n  },\n  border: {\n    border: 'solid',\n  },\n  fullHeightCard: {\n    height: '100%',\n  },\n  card: {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    borderRadius: '15px',\n    height: '100%',\n    position: 'relative',\n    mx:\"200px\",\n    width:\"75%\",\n    padding:\"20px\"\n  },\n  overlay: {\n    position: 'absolute',\n    top: '20px',\n    left: '20px',\n    color: 'white',\n  },\n  overlay2: {\n    position: 'absolute',\n    top: '20px',\n    right: '20px',\n    color: 'white',\n  },\n  grid: {\n    display: 'flex',\n  },\n  details: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    margin: '20px',\n  },\n  title: {\n    padding: '0 16px',\n  },\n  cardActions: {\n    padding: '0 16px 8px 16px',\n    display: 'flex',\n    justifyContent: 'space-between',\n  },\n});","import React, { useEffect } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport ThumbDownAltIcon from \"@material-ui/icons/ThumbDownAlt\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {\n  Card,\n  CardActionArea,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Typography,\n} from \"@material-ui/core/\";\nimport CardHeader from '@material-ui/core/CardHeader';\nimport history from '../../../history'\n\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\nimport { Divider, Avatar, Grid, Paper } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\n\nconst Post = ({ post }) => {\n  const classes = useStyles();\n  const postid = post?.post_id;\n\n  console.log(post);\n  return (\n    <Card className={classes}>\n        <CardHeader\n        avatar={\n          <Avatar aria-label=\"recipe\" className={classes.avatar} src={post?.user_image}>\n          \n          </Avatar>\n        }\n                title= {post?.name}\n></CardHeader>\n        {/* {console.log(post?.Post_Id)} */}\n        {/* {console.log(JSON.parse(post.Title))} */}\n        <div className=\"post__header\">\n          {/* <h4 className=\"post__header__username\">Posted by {post?.name}</h4> */}\n          <IconButton className=\"post__header__upvote\">\n            <ThumbUpAltIcon />\n          </IconButton>\n          {post?.upvotes-post?.downvotes}\n          <IconButton className=\"post__header__downvote\">\n            <ThumbDownAltIcon />\n          </IconButton>\n          \n        </div>\n        <Typography variant=\"h3\" component=\"h3\">\n          {post?.title}\n        </Typography>\n       \n        {(post?.image_link !==\"\" ) ? (<CardMedia\n          className={classes.media}\n          image={post?.image_link}\n          title={post?.Title}\n\n        />):( <CardMedia title={post?.Title}/>)}\n        {/* <Link to=\"/:postid/comments\">Comments</Link> */}\n\n        {/* <h3>{post.name}</h3> */}\n        {/* <img src={post.user_image} alt=\"Loading\"></img> */}\n\n        <h4>{post?.caption}</h4>\n        {/* <h3>{post?.image_Link}</h3> */}\n\n        <h3>{post?.timePosted}</h3>\n       \n      <CardActions>\n        <Button size=\"small\" color=\"primary\" onClick={() => {\n          localStorage.setItem(\"post_id\", {postid})\n  window.location.assign(`/${postid}/comments`)\n}} >\n          {post?.noofcomments} Comments \n          \n        </Button  >\n       <form>\n    \n</form>\n        {/* <Link to=\"/\"></Link> */}\n      </CardActions>\n    </Card>\n  );\n};\n\nexport default Post;\n","import axios from 'axios';\nimport Cookies from 'js-cookie';\nconst API = axios.create({ baseURL: 'https://ec2-52-206-109-241.compute-1.amazonaws.com/team2practo' });\n\nAPI.interceptors.request.use((req) => {\n//   if (localStorage.getItem('profile')) {\n    // req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem('profile')).token}`;\n    //Cookies.set('token','eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiIxMTYxMTc2NTcyNDE2MzgzNjM2NDkiLCJlbWFpbCI6Im5pa3VuamtyMDc4QGdtYWlsLmNvbSIsImlhdCI6MTYxMzg0OTc1OCwiZXhwIjoxNjEzODUzMzU4fQ.pjrx4ZDqE0dZCJadgl6EUVep3mGcZHZa1FcN4r1VjHI')\n     req.headers.Authorization = Cookies.get('access_control_token_cookie_skinder');\n    // req.headers.Authorization = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiIxMTYxMTc2NTcyNDE2MzgzNjM2NDkiLCJlbWFpbCI6Im5pa3VuamtyMDc4QGdtYWlsLmNvbSIsImlhdCI6MTYxMzgzNDg4MCwiZXhwIjoxNjEzODM4NDgwfQ.76-J-3veuHiZU2y3-o6S5s4YAAWbVWolaRt-0WGIHVg\";\n//   }\n\n  return req;\n});\n\n\n// export const fetchPosts = () => fetch(url).then(res => res.json())\nexport const fetchPosts = () => API.get('/posts');\n// export const fetchPosts = () => axios.get(`${url}/posts`');\n// export const fetchPostDetails = (postid) => API.get(`${url}/`)\nexport const upvoteComment = (comment_id) => API.put('/comments/uord', {'comment_id':comment_id,\n    'upordown':'u'});\n    \nexport const getPostComments= (postid) => API.get(`/${postid}/comments`);\n\nexport const downvoteComment = (comment_id) => API.put('/comments/uord', {'comment_id':comment_id,\n    'upordown':'d'});\nexport const createComment =(postid,Comment) => API.post('/comments', {'post_id': postid, 'comment' : Comment});\nexport const replyComment =(postid,Comment,up_level_cid) => API.post('/comments', {'post_id': postid, 'comment' : Comment, 'up_level_cid' :up_level_cid});\n//  forgot / in beginning\nexport const getThread = (comment_id) => API.get(`/comments/${comment_id}/thread`);\nexport const getUser =() => API.get(`/users`);\n","import * as api from \"../api/index.js\";\n\n// action creaters return actions\n// default keyword showed error\nexport const getPosts = () => async (dispatch) => {\n    try {\n        const {data} = await api.fetchPosts();\n        // console.log(data,\"secret\");\n        dispatch({type:'FETCH_ALL' , payload: data});\n    } catch (error) {\n        console.log(error);\n    }\n// return actions;\n}\nexport const getPostComments = (post_id) => async (dispatch) => {\n    try{\n        const {data} =await api.getPostComments(post_id);\n      \n        dispatch({type:'GET_POST_COMMENTS', payload: data});\n    } catch(error){\n        console.log(error);\n    }\n}\nexport const createComment = (postid,comment) => async (dispatch) => {\n  try {\n    const { data } = await api.createComment(postid,comment);\n    console.log(data,\"secret\");\n    dispatch({ type: 'CREATE_COMMENT', payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const replyComment = (postid,comment,up_level_cid) => async (dispatch) => {\n  try {\n    const { data } = await api.createComment(postid,comment,up_level_cid);\n    console.log(data,\"secret\");\n    dispatch({ type: 'REPLY_COMMENT', payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n\n\n\nexport const upvoteComment = (comment_id) => async (dispatch) => {\n  try {\n    const { data } = await api.upvoteComment(comment_id);\n\n    dispatch({ type: 'UPVOTE_COMMENT', payload: data });\n  } catch (error) {\n    console.log(\"error in upvote comments\");\n  }\n};\n\nexport const downvoteComment = (comment_id) => async (dispatch) => {\n  try {\n    const { data } = await api.upvoteComment(comment_id);\n\n    dispatch({ type: 'DOWNVOTE_COMMENT', payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getThread = (comment_id) => async (dispatch) => {\n  try {\n    const { data } = await api.getThread(comment_id);\n    console.log(\"thread data\",data);\n    dispatch({ type: 'GET_THREAD', payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getUser = () => async (dispatch) => {\n  try {\n    const { data } = await api.getUser();\n    console.log(\"thread data\",data);\n    dispatch({ type: 'GET_USER', payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};","import { CircularProgress, Grid } from \"@material-ui/core\";\nimport React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport \"./Posts.css\";\nimport Post from \"./Post/Post\";\nimport { useDispatch } from \"react-redux\";\nimport { getPosts } from \"../../actions/Posts\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\n\nconst Posts = () => {\n  const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   // forgot to call\n  //   dispatch(getPosts());\n  //   console.log(\"Dispatching\");\n  // }, [dispatch]);\n\n  // Allows to extract data from the Redux store state, using a selector function.\n  // useSelector() will also subscribe to the Redux store, and run  selector whenever an action is dispatched.\n  const posts = useSelector((state) => state.Posts);\n  // console.log(posts);\n  return !posts.length ? (\n    <CircularProgress />\n  ) : (\n    <Grid\n      item\n      xs={6}\n    //   className=\"post\"\n      container\n    //   direction=\"column\"\n    //   justify=\"flex-start\"\n    //   alignItems=\"center\"\n        \n      spacing={6}\n    >\n      {posts.map((post, key) => (\n        <Grid key={key} item x3={12} sm={12}>\n          <Post post={post} />\n        </Grid>\n      ))}\n    \n    </Grid>\n  );\n};\n\nexport default Posts;\n","import React, { useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { HouseRounded } from \"@material-ui/icons\";\nimport { useState } from \"react\";\nimport {createComment, getPostComments} from '../../actions/Posts'\nimport { useDispatch, useSelector } from 'react-redux';\n\n\n\nconst AddComment = (props) => {\n\n  const getUsername = state => state.User?.Name; \n\n  const username =useSelector(getUsername);\n\n  console.log(props.post?.post_id,\"adding comments\")\n  const postid=props.post?.post_id;\n  const up_level_cid=props.up_level_cid;\n  console.log(up_level_cid);\n  const dispatch = useDispatch();\n\n  const [comment, setComment] = useState('');\n\n  const clear = () => {\n    setComment('');\n  };\n\n  const handleAddComment = async(e) => {\n    e.preventDefault();\n    dispatch(createComment( postid, comment));\n    dispatch(getPostComments(postid))\n    clear();\n  }\n  const commentAs= \"Comment as \" + username\n\n  // useEffect(()=>{ \n  //   handleAddComment();\n  // },)\n  return (\n    <>\n      <TextField\n        id=\"outlined-multiline-static\"\n        margin=\"normal\"\n        label={commentAs}\n        multiline\n        rows={4}\n        // defaultValue=\"Default Value\"\n        variant=\"outlined\"\n        size=\"medium\"\n        fullWidth\n        onChange={event => {\n          const { value } = event.target;\n          setComment(value )}}\n        value={comment}\n      />\n     \n      <Button variant=\"contained\" color=\"primary\" onClick={handleAddComment}>\n        Comment\n      </Button>\n    </>\n  );\n};\n\nexport default AddComment;\n\n","import React, { useEffect, useState} from \"react\";\nimport { Divider, Avatar, Grid, Paper, CircularProgress,IconButton } from \"@material-ui/core\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport { getPostComments } from \"../../actions/Posts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Post from \"../Posts/Post/Post\";\nimport Posts from \"../Posts/Posts\";\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\nimport ThumbDownAltIcon from \"@material-ui/icons/ThumbDownAlt\";\nimport moment from 'moment';\nimport Button from \"@material-ui/core/Button\";\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\n\n\n\nimport {upvoteComment} from '../../actions/Posts'\n\nimport AddComment from '../AddComment/AddComment'\nimport { get } from \"js-cookie\";\n\nconst Comment = (props) => {\n\n  const post_id = props.comment?.post_id;\n\n  \n  \n  console.log(\"Seeing the comments of a post\",props);\n\n  \n  const dispatch = useDispatch();\n  useEffect(()=>{\n    // dispatch(upvoteComment(props.comment?.comment_id, \"u\"))\n    dispatch(getPostComments(post_id))\n    console.log(\"useEffect in comments\")\n  },[dispatch,props.comment?.comment_id,post_id]);\n\n  console.log(props, \"inside comments\");\n    \n\n    return (\n    <Paper style={{ padding: \"40px 20px\", marginTop: 10 }}>\n    <Grid  id=\"comment-grid\" container wrap=\"nowrap\" spacing={2}>\n        <Grid item>\n            <Avatar alt=\"Remy Sharp\" src={props?.comment?.user_image} />\n        </Grid>\n\n        <Grid justifyContent=\"left\" item xs zeroMinWidth>\n            <h4 style={{ margin: 0, textAlign: \"left\" }}>{props.comment?.name}</h4>\n            <p style={{ textAlign: \"left\", color: \"gray\" }}>\n                {/* {moment(props.comment?.timeCommented).fromNow()} */}\n                {(props.comment?.timeCommented)}\n            </p>\n            <p style={{ textAlign: \"left\" }}>\n                {props?.comment?.comment}\n            </p>\n            \n            <IconButton className=\"post__header__upvote\" onClick={()=>dispatch(upvoteComment(props.comment?.comment_id, \"u\"))}>\n            <ThumbUpAltIcon color=\"primary\"/>\n          </IconButton >\n          {props.comment?.upVotes-props.comment?.downVotes}\n          <IconButton className=\"post__header__downvote\">\n            <ThumbDownAltIcon />\n          </IconButton>\n        </Grid>\n\n      \n    </Grid>\n    {/* <h3>Thread</h3> */}\n      <Button size=\"small\" color=\"black\" onClick={()=> {\n        localStorage.setItem(\"post_id\", props.comment?.post_id )\n        window.location.assign(`/comments/${props.comment?.comment_id}/thread`)}} >View Thread</Button>\n</Paper>)\n}\n\nexport default Comment;","import React, { useEffect } from \"react\";\nimport {\n  Divider,\n  Avatar,\n  Grid,\n  Paper,\n  CircularProgress,\n} from \"@material-ui/core\";\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport { getPostComments } from \"../../actions/Posts\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Post from \"../Posts/Post/Post\";\nimport Posts from \"../Posts/Posts\";\nimport AddComment from \"../AddComment/AddComment\";\nimport Comment from \"../Comment/Comment\";\nimport { LocalFlorist } from \"@material-ui/icons\";\nimport commentList from './CommentList';\n\nconst CommentList = ({ match }) => {\n  //   const posts = useSelector((state) => state.Posts);\n\n  const dispatch = useDispatch();\n\n  const id = match.params.postid;\n  var post = null;\n  var comment = [];\n  useEffect(() => {\n    dispatch(getPostComments(id));\n    console.log(\"dispatching getPostComments\");\n  }, [dispatch, id]);\n\n  const comments = useSelector((state) => state.Comments);\n  const posts = useSelector((state) => state.Posts);\n\n  console.log(comments, \"Heare are comments\");\n  // console.log(id);\n  // console.log(posts[7]?.post_id);\n  for (let i = 0; i < posts.length; i++) {\n    if (posts[i]?.post_id == id) {\n      post = posts[i];\n    }\n  }\n  for (let i = 0; i < comments.length; i++) {\n    if (comments[i]?.post_id == id) {\n      comment.push(comments[i]);\n    }\n  }\n  comment.sort((a, b) => (a?.timePosted > b?.timePosted ? -1 : 1));\n \n  console.log(post, \"new post\");\n  console.log(comments, \"zero\");\n  return (\n    <div style={{  padding: 50 }} className=\"App\">\n      <Grid container spacing={3}>\n         <Grid item xs={6}>\n        {/* !post ? <CircularProgress />:  */}\n        <Post post={post} />\n        <AddComment post ={post} />\n      </Grid>\n      </Grid>\n     \n\n      {comment.map((comment, key) => (\n        <Grid key={key} item xs={9} sm={6}>\n          <Comment comment={comment} />\n        </Grid>\n      ))}\n\n\n     \n    </div>\n  );\n};\nexport default CommentList;\n","import React, { useEffect } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport { HouseRounded } from \"@material-ui/icons\";\nimport { useState } from \"react\";\nimport {replyComment} from '../../actions/Posts'\nimport { useDispatch, useSelector } from 'react-redux';\n\n\nconst AddReplyToComments= (props) => {\n  console.log(props.post?.post_id,\"adding comments\")\n  const postid=props.post?.post_id;\n  const up_level_cid=props.up_level_cid;\n  console.log(up_level_cid);\n  const dispatch = useDispatch();\n  const [comment, setComment] = useState('');\n\n  const clear = () => {\n    setComment('');\n  };\n\n  const handleAddComment = async(e) => {\n    e.preventDefault();\n    await dispatch(replyComment( postid, comment,up_level_cid));\n    clear();\n  }\n\n  // useEffect(()=>{\n  \n  // })\n  return (\n    <>\n      <TextField\n        id=\"outlined-multiline-static\"\n        margin=\"normal\"\n        label=\"Comment as \"\n        multiline\n        rows={4}\n        // defaultValue=\"Default Value\"\n        variant=\"outlined\"\n        size=\"medium\"\n        fullWidth\n        onChange={(event) => setComment(event.target.value)}\n        value={comment}\n      />\n      <Button variant=\"contained\" color=\"primary\" onClick={handleAddComment}>\n        Reply\n      </Button>\n    </>\n  );\n};\n\nexport default AddReplyToComments;\n\n","import React, {useEffect} from 'react'\nimport {useDispatch, useSelector } from 'react-redux';\nimport {getPostComments, getPosts, getThread} from '../../actions/Posts';\nimport Comment from '../Comment/Comment';\n\nimport history from '../../history';\nimport Post from '../Posts/Post/Post';\nimport AddReplyToComment from '../AddReply/AddReplyToComment';\n\n\nconst Thread = ({match}) => {\n   \n    const comment_id=match?.params?.commentid;\n\n    // console.log(\"matching\",match);\n\n    const post_id =localStorage.getItem(\"post_id\");\n\n    // console.log(\"localstore\",post_id)\n\n    const threaddd = useSelector((state)=> {\n        console.log(\"haha\",state)\n        return state.Thread});\n\n    console.log(\"threaddd\", threaddd);\n\n\n    const dispatch = useDispatch();\n\n    useEffect(()=>{\n        dispatch(getThread(comment_id))\n        // dispatch(getPosts);\n        dispatch(getPostComments(post_id))\n    },[dispatch,post_id,comment_id])\n\n    const posts = useSelector((state)=> state.Posts);\n\n    const post= posts.find(post=> post.post_id == post_id);\n    console.log(\"seriosdebug\",post);\n    const comments = useSelector((state)=> state.Comments);\n    console.log(\"kkk\", comments)\n    const comment=comments.find(comment => comment.comment_id ==comment_id)\n\n\n    // const thread = useSelector((state)=> {\n    //     console.log(\"haha\",state)\n    //     return state.Thread});\n    // console.log(thread);\n\n  \n   \n    return (\n        <div>\n            {/* <comment comment= */}\n{/*             \n            {!thread.length ?<div> <h1>Thread not exit\n\n            </h1> <button onClick={history.goBack}>Go Back</button></div>:  */}\n\n            <div>\n                {/* <Post post={post}/> */}\n                <Comment comment={comment}/>\n                <AddReplyToComment post ={post_id} up_level_cid={comment_id} />{ threaddd.map((thread_items, keys) => \n            <div keys={keys}>\n            <Comment comment={thread_items} />\n            </div>)} </div>  \n            \n        </div>\n    )\n            \n}\nexport default Thread;\n","import React, { Component } from \"react\";\nimport { Router, Switch, Route } from \"react-router-dom\";\nimport history from \"./history\";\nimport Posts from \"./components/Posts/Posts\";\n\nimport CommentList from \"./components/CommentList/CommentList\";\nimport Thread from './components/Thread/Thread';\n\nconst Routes = () => (\n  <Router history={history} basename={'/post'}>\n    <Switch>\n     \n      <Route path=\"/\" exact>\n        <Posts />\n      </Route>\n      <Route path=\"/:postid/comments\" component={CommentList} exact />\n      <Route path=\"/comments/:commentid/thread\" component={Thread} exact/>\n    </Switch>\n  </Router>\n);\nexport default Routes;\n","export default __webpack_public_path__ + \"static/media/logo.7c0ee393.png\";","import React, {useEffect} from \"react\";\nimport './App.css';\nimport Posts from './components/Posts/Posts'\n\nimport CommentList from './components/CommentList/CommentList'\n// import {Container, AppBar, Typography} from \"@material-ui/core\"\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport {useDispatch} from \"react-redux\"\nimport {getPosts, getUser} from './actions/Posts';\nimport Routes from './Routes';\nimport logo from './logo.png'\n\nconst App = () => {\n\n  // console.log(store);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // forgot to call\n    dispatch(getPosts());\n    dispatch(getUser());\n    console.log(\"Dispatching\");\n  }, [dispatch]);\n\n  return (\n    <>\n    <div className=\"app__header\">\n          <img className=\"app__headerImage\" src={logo} alt=\"Logo\"/>\n\n      </div>\n    <div className=\"app\">\n      \n      <Router>\n              <Routes />  \n          \n       </Router>\n      <div>\n        {/* <Posts/> */}\n      </div>\n    </div>\n    </>\n  )\n    \n    \n  \n}\n\nexport default App;\n","// reducer is function which accepts a state and an action\n\nconst reducer = (Posts=[], action) => {\n    switch(action.type) {\n        case 'FETCH_ALL':\n            return action.payload ;\n        // case 'GET_POST_COMMENTS':\n        //     return action.payload;\n        default:\n            return Posts;\n\n    }\n}\n\nexport default reducer;","const reducer = (Comments= [], action) => {\n    switch(action.type) {\n        case 'GET_POST_COMMENTS':\n            return  action.payload ;\n        case 'CREATE':\n            return [...Comments, action.payload] ;\n        case 'UPVOTE_COMMENT':\n            return Comments ;\n        case 'DOWNVOTE_COMMENT':\n            return Comments;\n        // case 'GET_THREAD':\n        //     return action.payload;\n        default:\n            return Comments;\n\n    }\n}\n\nexport default reducer;","const reducer = (Thread=[], action) => {\n    switch(action.type) {\n        \n        case 'GET_THREAD':\n            return action.payload;\n\n        case 'REPLY_COMMENT':\n            return action.payload;\n        default:\n            return Thread;\n\n    }\n}\n\nexport default reducer;","\n\nconst reducer = (User=[], action) => {\n    switch(action.type) {\n        case 'GET_USER':\n            return action.payload ;\n        // case 'GET_POST_COMMENTS':\n        //     return action.payload;\n        default:\n            return User;\n\n    }\n}\n\nexport default reducer;","// Step 2\nimport {combineReducers} from \"redux\";\nimport Posts from \"./Posts\"\nimport Comments from \"./Comments\"\nimport Thread from \"./Thread\"\nimport User from \"./User\"\nexport const reducers = combineReducers ({\n    Posts :Posts,\n    Comments:Comments,\n    Thread:Thread,\n    User:User,\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider } from \"react-redux\";\nimport {createStore, applyMiddleware, compose} from \"redux\";\nimport thunk from \"redux-thunk\";\nimport {reducers} from \"./reducers\"\n\n// STORE -->global state\n// to set up redux create a store\n\n//  Step 1 \nconst store = createStore(reducers, compose(applyMiddleware(thunk)))\n\n// ACTION INCREMENT\n\n// Reducer\n\n// Dispach dispach this action to reducer store gets update\n//donot forget to pass store props\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}